
  #######################################################################
  #####             Java API for Freeling library                  ######
  #######################################################################

  This directory contains required files to generate a java API for FreeLing.

  HOW TO BUILD THE API IN Linux/MacOS

    1.- Install FreeLing 

    2.- Install Java SDK and JNI headers

    3.- Edit Makefile in this directory to adjust the right values of
          FREELINGDIR = directory prefix where you installed freeling (probably /usr/local)
          SWIGDIR = directory where swig share files are installed in your system
                    (e.g. /usr/local/share/swig2.0)
          JAVADIR = directory where java is installed (e.g. /usr/lib/jvm/java-7-oracle)

    4.- Run 'make' to build the java API.
        On MacOS, you need to use Makefile.MacOSX:  make -f Makefile.MacOSX


  HOW TO USE THE API FROM A JAVA PROGRAM IN Linux/MacOS
 
    1.- Make sure that the directory contanining libfreeling.so
        ($FREELINGDIR/lib) is in your LD_LIBRARY_PATH

    2.- Make sure that the directory contanining libfreeling_javaAPI.so (created 
        by 'make' above) is in your LD_LIBRARY_PATH.

    3.- Make sure that the package "freeling.jar" created by make is in your CLASSPATH
 
    4.- Compile and execute the sample programs (or your own java program): 

         javac Analyzer.java
         java Analyzer

         javac SemGraph.java
         java SemGraph

   See FreeLing documentation and sample programs in src/main to
   understand what this sample program is doing.

  ================================================================================

  HOW TO BUILD THE API IN WINDOWS, USING MSVC

    1. Install java 

    2. Download and install swig (http://www.swig.org/)

    3. Run swig with freeling_javaAPI.i to generate the API
       SWIG will generate a directory edu/upc/freeling with the Java API 
       for all modules, and a file freeling_javaAPI.cxx with the JNI side 
       of the API.

    4. Compile java code in edu/upc/freeling and build a file freeling.jar 
       with the results.

    5. Compile freeling_javaAPI.cxx into a DLL (using MSVC or any other compiler).
       You'll need to provide paths to freeling and treeler include directories, 
       and to Java headers (jni.h etc)
       
       You will get a freeling_javaAPI.dll library to be loaded from 
       your Java programs


  HOW TO USE THE API FROM A JAVA PROGRAM IN WINDOWS
 
    1.- Make sure libfreeling.dll, libboost, and libicu are in a path where 
        they will be found.
        (e.g. set PATH=%PATH%;C:\my\freeling\installation;C:\my\libicu\installation)

    2.- Make sure libfreeling_javaAPI.dll (created by swig) is in a path 
        where it will be found.
        (e.g. set PATH=%PATH%;C:\my\freeling\javaAPI\installation)

    3.- Make sure that the package "freeling.jar" created by make is in your CLASSPATH
 
    4.- Compile and execute the sample program (or your program): 
        E.g.
         C:\my\java\installation\javac.exe Analyzer.java
         C:\my\java\installation\java.exe Analyzer

   See FreeLing documentation and sample programs in src/main to
   understand what this sample program is doing.

